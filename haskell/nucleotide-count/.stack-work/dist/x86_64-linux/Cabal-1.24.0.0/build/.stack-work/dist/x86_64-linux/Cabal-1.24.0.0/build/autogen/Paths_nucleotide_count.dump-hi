
==================== FINAL INTERFACE ====================
2016-11-15 14:53:22.30357 UTC

interface nucleotide-count-0.0.0-LnIjeFZp0SF6K8oWePf1A:Paths_nucleotide_count 8001
  interface hash: 84aae3411b044617567ea959ff1a8134
  ABI hash: 2866bd3df1d717d1b47a0710bf19f427
  export-list hash: 74405bdc3f3d78cb934a9df03061c7e0
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 765d0baa55b424563bf6badacdfe9e85
  sig of: Nothing
  used TH splices: False
  where
exports:
  Paths_nucleotide_count.getBinDir
  Paths_nucleotide_count.getDataDir
  Paths_nucleotide_count.getDataFileName
  Paths_nucleotide_count.getLibDir
  Paths_nucleotide_count.getLibexecDir
  Paths_nucleotide_count.getSysconfDir
  Paths_nucleotide_count.version
module dependencies:
package dependencies: base-4.9.0.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
import  -/  base-4.9.0.0:Control.Exception 8762ca621bc15a8c1e8e34c703aba1aa
import  -/  base-4.9.0.0:Control.Exception.Base 4e2b16a4aa23317e444a61cce8fedc63
import  -/  base-4.9.0.0:Data.Version c62fdf293aee148a8ebca631ccff2037
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.IO 7ddc7086a7fc3b7d7043cc7bc59a04ba
import  -/  base-4.9.0.0:GHC.IO.Exception 6616e78328d3d532254cd5e593c9c639
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  base-4.9.0.0:System.Environment ee0914a962f5508d0fd404c89ee4999b
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
addDependentFile "/home/veritas/.stack/programs/x86_64-linux/ghc-8.0.1/lib/ghc-8.0.1/include/ghcversion.h"
addDependentFile ".stack-work/dist/x86_64-linux/Cabal-1.24.0.0/build/autogen/cabal_macros.h"
addDependentFile "/usr/include/stdc-predef.h"
f81c06eb29f10c53ae101ca75f9f92e0
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Paths_nucleotide_count.$trModule2
                   Paths_nucleotide_count.$trModule1) -}
8a6858dc896f0c0bb94bc495dbaf9eb6
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Paths_nucleotide_count"#) -}
3b9e817fcb0245b652b96721d9237b16
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "nucleotide-count-0.0.0-LnIjeFZp0SF6K8oWePf1A"#) -}
bed8d75b58681ed1c603acf1d2d5e65f
  bindir :: GHC.IO.FilePath
  {- Unfolding: (GHC.CString.unpackCString#
                   "/home/veritas/exercism/haskell/nucleotide-count/.stack-work/install/x86_64-linux/nightly-2016-07-17/8.0.1/bin"#) -}
ef6899806bdc2721cd0af0e759e2253c
  datadir :: GHC.IO.FilePath
  {- Unfolding: (GHC.CString.unpackCString#
                   "/home/veritas/exercism/haskell/nucleotide-count/.stack-work/install/x86_64-linux/nightly-2016-07-17/8.0.1/share/x86_64-linux-ghc-8.0.1/nucleotide-count-0.0.0"#) -}
7e25997da7cf2c3b9061b06490a70737
  getBinDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_nucleotide_count.getBinDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
12fc1d5b994dc73a4fd0d9575fa02434
  getBinDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_nucleotide_count.getBinDir3
                     `cast`
                   (GHC.Types.N:IO[0] <GHC.Base.String>_R)
                   Paths_nucleotide_count.getBinDir2
                   eta) -}
0b6705fb89d9bdeb903f0a8e05f2c4e3
  getBinDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e100 $dException1 e2 ->
                 case (GHC.Exception.$p1Exception @ e100 $dException1)
                        `cast`
                      (Data.Typeable.Internal.N:Typeable[0] <*>_N <e100>_N)
                        (GHC.Prim.proxy#
                           @ *
                           @ e100) of wild1 { Data.Typeable.Internal.TypeRep dt dt1 ds2 ds3 ds4 ->
                 case GHC.IO.Exception.$fExceptionIOException3 of wild2 { Data.Typeable.Internal.TypeRep dt2 dt3 ds5 ds6 ds7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqWord# dt dt2) of wild3 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqWord# dt1 dt3) of wild4 {
                        GHC.Types.False
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        GHC.Types.True
                        -> (# eta, Paths_nucleotide_count.bindir #) } } } } }) -}
dbb2eea925d5cfd0b8be1e2439909ae2
  getBinDir3 :: GHC.Types.IO GHC.Base.String
  {- Unfolding: (GHC.Magic.lazy
                   @ (GHC.Types.IO GHC.Base.String)
                   Paths_nucleotide_count.getBinDir4
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))) -}
b580b8ebea962151897ca5e9ecaf8534
  getBinDir4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1,
     Unfolding: (System.Environment.getEnv1
                   Paths_nucleotide_count.getBinDir5) -}
45685634bc00f2617334d4909eed6da7
  getBinDir5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "nucleotide_count_bindir"#) -}
b1546de9c80538aed010a7b0a632f5d3
  getDataDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_nucleotide_count.getDataDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
ea4a065728db1f76fdb762c1cc5726ca
  getDataDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_nucleotide_count.getDataDir3
                     `cast`
                   (GHC.Types.N:IO[0] <GHC.Base.String>_R)
                   Paths_nucleotide_count.getDataDir2
                   eta) -}
ca2c958db2efdb8a46c91fae1fd4b188
  getDataDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e100 $dException1 e2 ->
                 case (GHC.Exception.$p1Exception @ e100 $dException1)
                        `cast`
                      (Data.Typeable.Internal.N:Typeable[0] <*>_N <e100>_N)
                        (GHC.Prim.proxy#
                           @ *
                           @ e100) of wild1 { Data.Typeable.Internal.TypeRep dt dt1 ds2 ds3 ds4 ->
                 case GHC.IO.Exception.$fExceptionIOException3 of wild2 { Data.Typeable.Internal.TypeRep dt2 dt3 ds5 ds6 ds7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqWord# dt dt2) of wild3 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqWord# dt1 dt3) of wild4 {
                        GHC.Types.False
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        GHC.Types.True
                        -> (# eta, Paths_nucleotide_count.datadir #) } } } } }) -}
14cefbf215e9e1fab587a51c3dc91d0d
  getDataDir3 :: GHC.Types.IO GHC.Base.String
  {- Unfolding: (GHC.Magic.lazy
                   @ (GHC.Types.IO GHC.Base.String)
                   Paths_nucleotide_count.getDataDir4
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))) -}
4b6661a358cc99a3a6aa51216491a29a
  getDataDir4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1,
     Unfolding: (System.Environment.getEnv1
                   Paths_nucleotide_count.getDataDir5) -}
2910851e4e2d367b2832d3f084289769
  getDataDir5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "nucleotide_count_datadir"#) -}
515b6aa278db41242ad536ac14cbc208
  getDataFileName :: GHC.IO.FilePath -> GHC.Types.IO GHC.IO.FilePath
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_nucleotide_count.getDataFileName1
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.IO.FilePath>_R)) -}
b48c42489f6a708724986523ca2b709e
  getDataFileName1 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.FilePath #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (name :: GHC.IO.FilePath)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.catch#
                        @ GHC.Base.String
                        @ GHC.Exception.SomeException
                        Paths_nucleotide_count.getDataDir3
                          `cast`
                        (GHC.Types.N:IO[0] <GHC.Base.String>_R)
                        Paths_nucleotide_count.getDataDir2
                        eta of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    GHC.Base.++
                      @ GHC.Types.Char
                      ipv1
                      (GHC.CString.unpackAppendCString# "/"# name) #) }) -}
f807de2588862439de650cad594da720
  getLibDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_nucleotide_count.getLibDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
3eefc82c54f8b1a145002a1853643d8b
  getLibDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_nucleotide_count.getLibDir3
                     `cast`
                   (GHC.Types.N:IO[0] <GHC.Base.String>_R)
                   Paths_nucleotide_count.getLibDir2
                   eta) -}
79aef137864b2e04385be9f83dcd415b
  getLibDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e100 $dException1 e2 ->
                 case (GHC.Exception.$p1Exception @ e100 $dException1)
                        `cast`
                      (Data.Typeable.Internal.N:Typeable[0] <*>_N <e100>_N)
                        (GHC.Prim.proxy#
                           @ *
                           @ e100) of wild1 { Data.Typeable.Internal.TypeRep dt dt1 ds2 ds3 ds4 ->
                 case GHC.IO.Exception.$fExceptionIOException3 of wild2 { Data.Typeable.Internal.TypeRep dt2 dt3 ds5 ds6 ds7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqWord# dt dt2) of wild3 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqWord# dt1 dt3) of wild4 {
                        GHC.Types.False
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        GHC.Types.True
                        -> (# eta, Paths_nucleotide_count.libdir #) } } } } }) -}
78334fbd6c9ab261c99dba1776da431e
  getLibDir3 :: GHC.Types.IO GHC.Base.String
  {- Unfolding: (GHC.Magic.lazy
                   @ (GHC.Types.IO GHC.Base.String)
                   Paths_nucleotide_count.getLibDir4
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))) -}
ded63f67f4cfdfacbc6f6a081d5cf0d0
  getLibDir4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1,
     Unfolding: (System.Environment.getEnv1
                   Paths_nucleotide_count.getLibDir5) -}
25b5cfa1f53bd3286dd78e5dc9852543
  getLibDir5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "nucleotide_count_libdir"#) -}
466b65d0843c2dd5545f75bd2aa89f93
  getLibexecDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_nucleotide_count.getLibexecDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
087795774478034a1d67dbd232aea772
  getLibexecDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_nucleotide_count.getLibexecDir3
                     `cast`
                   (GHC.Types.N:IO[0] <GHC.Base.String>_R)
                   Paths_nucleotide_count.getLibexecDir2
                   eta) -}
b026eb4fa57871dbb96ef9b91518e642
  getLibexecDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e100 $dException1 e2 ->
                 case (GHC.Exception.$p1Exception @ e100 $dException1)
                        `cast`
                      (Data.Typeable.Internal.N:Typeable[0] <*>_N <e100>_N)
                        (GHC.Prim.proxy#
                           @ *
                           @ e100) of wild1 { Data.Typeable.Internal.TypeRep dt dt1 ds2 ds3 ds4 ->
                 case GHC.IO.Exception.$fExceptionIOException3 of wild2 { Data.Typeable.Internal.TypeRep dt2 dt3 ds5 ds6 ds7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqWord# dt dt2) of wild3 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqWord# dt1 dt3) of wild4 {
                        GHC.Types.False
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        GHC.Types.True
                        -> (# eta, Paths_nucleotide_count.libexecdir #) } } } } }) -}
7fc7f857e36feadf8d6b3eb54116636d
  getLibexecDir3 :: GHC.Types.IO GHC.Base.String
  {- Unfolding: (GHC.Magic.lazy
                   @ (GHC.Types.IO GHC.Base.String)
                   Paths_nucleotide_count.getLibexecDir4
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))) -}
23f8100d265a2584a2de61650e0ba8b7
  getLibexecDir4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1,
     Unfolding: (System.Environment.getEnv1
                   Paths_nucleotide_count.getLibexecDir5) -}
5bbc4a8f7bc84aa5b4c3ab0a3a84f05d
  getLibexecDir5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "nucleotide_count_libexecdir"#) -}
685f69a4a5ba7073e34f878ed230f31b
  getSysconfDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_nucleotide_count.getSysconfDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
7427bc246a54b0a589e74505ed984e99
  getSysconfDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_nucleotide_count.getSysconfDir3
                     `cast`
                   (GHC.Types.N:IO[0] <GHC.Base.String>_R)
                   Paths_nucleotide_count.getSysconfDir2
                   eta) -}
9d178e6abfb15dfd6e17a3c355c4afb2
  getSysconfDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e100 $dException1 e2 ->
                 case (GHC.Exception.$p1Exception @ e100 $dException1)
                        `cast`
                      (Data.Typeable.Internal.N:Typeable[0] <*>_N <e100>_N)
                        (GHC.Prim.proxy#
                           @ *
                           @ e100) of wild1 { Data.Typeable.Internal.TypeRep dt dt1 ds2 ds3 ds4 ->
                 case GHC.IO.Exception.$fExceptionIOException3 of wild2 { Data.Typeable.Internal.TypeRep dt2 dt3 ds5 ds6 ds7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqWord# dt dt2) of wild3 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqWord# dt1 dt3) of wild4 {
                        GHC.Types.False
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        GHC.Types.True
                        -> (# eta, Paths_nucleotide_count.sysconfdir #) } } } } }) -}
580bfcecd256e2460072575bb42d1077
  getSysconfDir3 :: GHC.Types.IO GHC.Base.String
  {- Unfolding: (GHC.Magic.lazy
                   @ (GHC.Types.IO GHC.Base.String)
                   Paths_nucleotide_count.getSysconfDir4
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))) -}
70be89a0ddea779eddce5b9d5bbbe231
  getSysconfDir4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1,
     Unfolding: (System.Environment.getEnv1
                   Paths_nucleotide_count.getSysconfDir5) -}
f01fa91ad81975e20d50dc0dbfa66083
  getSysconfDir5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "nucleotide_count_sysconfdir"#) -}
a705033756ee4091314d40944145697d
  libdir :: GHC.IO.FilePath
  {- Unfolding: (GHC.CString.unpackCString#
                   "/home/veritas/exercism/haskell/nucleotide-count/.stack-work/install/x86_64-linux/nightly-2016-07-17/8.0.1/lib/x86_64-linux-ghc-8.0.1/nucleotide-count-0.0.0-LnIjeFZp0SF6K8oWePf1A"#) -}
a4eb124052a605fa17f92909dc59d42b
  libexecdir :: GHC.IO.FilePath
  {- Unfolding: (GHC.CString.unpackCString#
                   "/home/veritas/exercism/haskell/nucleotide-count/.stack-work/install/x86_64-linux/nightly-2016-07-17/8.0.1/libexec"#) -}
fcf3492b994d8cc8b4e29f8b8e581df1
  sysconfdir :: GHC.IO.FilePath
  {- Unfolding: (GHC.CString.unpackCString#
                   "/home/veritas/exercism/haskell/nucleotide-count/.stack-work/install/x86_64-linux/nightly-2016-07-17/8.0.1/etc"#) -}
b8e8835521c00a34af8cd622f95616b2
  version :: Data.Version.Version
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Data.Version.Version
                   Paths_nucleotide_count.version1
                   (GHC.Types.[] @ GHC.Base.String)) -}
e5bb23f9063ddf4e62a38ae04e6024f9
  version1 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_nucleotide_count.version4
                   Paths_nucleotide_count.version2) -}
372ea5cf4aac45615471ca251eb8250d
  version2 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_nucleotide_count.version4
                   Paths_nucleotide_count.version3) -}
8a69d61194b0d2dbcdeebfd96e1f8464
  version3 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_nucleotide_count.version4
                   (GHC.Types.[] @ GHC.Types.Int)) -}
9908e0a29eef6774de365dff90694375
  version4 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

